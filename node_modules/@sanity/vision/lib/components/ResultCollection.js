"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJsonInspector = _interopRequireDefault(require("react-json-inspector"));

var _JsonDump = _interopRequireDefault(require("./JsonDump"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ResultCollection extends _react.default.PureComponent {
  constructor(props) {
    super(props);
    this.state = {
      expanded: []
    };
  }

  handleToggleExpandRow(id) {
    var expanded = this.state.expanded;
    var currentIndex = expanded.indexOf(id);

    if (currentIndex === -1) {
      expanded.push(id);
    } else {
      expanded.splice(currentIndex, 1);
    }
  }

  getExpandRowHandler(id) {
    return () => this.handleToggleExpandRow(id);
  }

  isExpanded(id) {
    return this.state.expanded.indexOf(id) !== -1;
  }

  shouldExpand(path, item) {
    // Expand root-level nodes and refs
    return !isNaN(path) || item && item._ref;
  }

  render() {
    return this.props.viewMode === 'inspect' ? _react.default.createElement(_reactJsonInspector.default, {
      className: "vision_result-list",
      data: this.props.data,
      isExpanded: this.shouldExpand,
      search: false,
      filterOptions: {
        ignoreCase: true
      }
    }) : _react.default.createElement(_JsonDump.default, {
      data: this.props.data
    });
  }

}

ResultCollection.propTypes = {
  data: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.object)]),
  viewMode: _propTypes.default.oneOf(['inspector', 'dump'])
};
ResultCollection.defaultProps = {
  viewMode: 'dump'
};
var _default = ResultCollection;
exports.default = _default;