"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = JsonDump;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactJsonView = _interopRequireDefault(require("react-json-view"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/* eslint-disable react/prop-types, react/no-multi-comp */
function isJSONValue(data) {
  return data !== null && typeof data === 'object';
}

class JsonBlock extends _react.default.PureComponent {
  render() {
    var data = this.props.data;
    var styles = this.context.styles.jsonDump;
    return _react.default.createElement("pre", {
      className: styles.block
    }, isJSONValue(data) ? _react.default.createElement(_reactJsonView.default, {
      displayDataTypes: false,
      src: data,
      name: null
    }) : _react.default.createElement("span", {
      className: styles.primitive
    }, data || 'null'));
  }

}

JsonBlock.contextTypes = {
  styles: _propTypes.default.object
};

function JsonDump(props) {
  if (!Array.isArray(props.data)) {
    return _react.default.createElement(JsonBlock, {
      data: props.data
    });
  }

  return _react.default.createElement(_react.Fragment, null, props.data.map((row, i) => _react.default.createElement(JsonBlock, {
    key: row._id || row.eventId || i,
    data: row
  })));
}